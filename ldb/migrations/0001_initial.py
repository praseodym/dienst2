# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import django.db.models.deletion

import ldb.country_field


class Migration(migrations.Migration):
    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Committee',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('description', models.TextField(verbose_name='description', blank=True)),
            ],
            options={
                'verbose_name': 'committee',
                'verbose_name_plural': 'committees',
            },
        ),
        migrations.CreateModel(
            name='CommitteeMembership',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('board', models.IntegerField(verbose_name='board')),
                ('position', models.CharField(max_length=50, verbose_name='position', blank=True)),
                ('ras_months', models.IntegerField(null=True, verbose_name='RAS months', blank=True)),
                ('committee', models.ForeignKey(to='ldb.Committee')),
            ],
            options={
                'verbose_name': 'committee membership',
                'verbose_name_plural': 'committee memberships',
            },
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('street_name', models.CharField(max_length=75, verbose_name='street name', blank=True)),
                ('house_number', models.CharField(max_length=7, verbose_name='house number', blank=True)),
                ('address_2', models.CharField(max_length=75, verbose_name='address row 2', blank=True)),
                ('address_3', models.CharField(max_length=75, verbose_name='address row 3', blank=True)),
                ('postcode', models.CharField(max_length=10, verbose_name='postcode', blank=True)),
                ('city', models.CharField(max_length=50, verbose_name='city', blank=True)),
                ('country', ldb.country_field.CountryField(blank=True, max_length=2, verbose_name='country',
                                                           choices=[('AF', 'Afghanistan'), ('AX', 'Ålandseilanden'),
                                                                    ('AL', 'Albanië'), ('DZ', 'Algerije'),
                                                                    ('AS', 'Amerikaans-Samoa'), ('AD', 'Andorra'),
                                                                    ('AO', 'Angola'), ('AI', 'Anguilla'),
                                                                    ('AQ', 'Antarctica'), ('AG', 'Antigua en Barbuda'),
                                                                    ('AR', 'Argentinië'), ('AM', 'Armenië'),
                                                                    ('AW', 'Aruba'), ('AU', 'Australië'),
                                                                    ('AT', 'Oostenrijk'), ('AZ', 'Azerbeidzjan'),
                                                                    ('BS', "Bahama's"), ('BH', 'Bahrein'),
                                                                    ('BD', 'Bangladesh'), ('BB', 'Barbados'),
                                                                    ('BY', 'Wit-Rusland / Belarus'), ('BE', 'België'),
                                                                    ('BZ', 'Belize'), ('BJ', 'Benin'),
                                                                    ('BM', 'Bermuda'), ('BT', 'Bhutan'),
                                                                    ('BO', 'Bolivia, Plurinationale Staat'),
                                                                    ('BQ', 'Bonaire, Sint Eustatius en Saba'),
                                                                    ('BA', 'Bosnië en Herzegovina'), ('BW', 'Botswana'),
                                                                    ('BV', 'Bouvet'), ('BR', 'Brazilië'),
                                                                    ('IO', 'Brits Territorium in de Indische Oceaan'),
                                                                    ('BN', 'Brunei'), ('BG', 'Bulgarije'),
                                                                    ('BF', 'Burkina Faso'), ('BI', 'Burundi'),
                                                                    ('KH', 'Cambodja'), ('CM', 'Kameroen'),
                                                                    ('CA', 'Canada'), ('CV', 'Kaap Verde'),
                                                                    ('KY', 'Kaaimaneilanden'),
                                                                    ('CF', 'Centraal-Afrikaanse Republiek'),
                                                                    ('TD', 'Tsjaad'), ('CL', 'Chili'), ('CN', 'China'),
                                                                    ('CX', 'Christmaseiland'), ('CC', 'Cocoseilanden'),
                                                                    ('CO', 'Colombia'), ('KM', 'Comoren'),
                                                                    ('CG', 'Congo-Brazzaville'),
                                                                    ('CD', 'Congo-Kinshasa'), ('CK', 'Cookeilanden'),
                                                                    ('CR', 'Costa Rica'), ('CI', 'Ivoorkust'),
                                                                    ('HR', 'Kroatië'), ('CU', 'Cuba'),
                                                                    ('CW', 'Curaçao'), ('CY', 'Cyprus'),
                                                                    ('CZ', 'Tsjechië'), ('DK', 'Denemarken'),
                                                                    ('DJ', 'Djibouti'), ('DM', 'Dominica'),
                                                                    ('DO', 'Dominicaanse Republiek'), ('EC', 'Ecuador'),
                                                                    ('EG', 'Egypte'), ('SV', 'El Salvador'),
                                                                    ('GQ', 'Equatoriaal-Guinea'), ('ER', 'Eritrea'),
                                                                    ('EE', 'Estland'), ('ET', 'Ethiopië'),
                                                                    ('FK', 'Falklandeilanden'), ('FO', 'Faeröer'),
                                                                    ('FJ', 'Fiji'), ('FI', 'Finland'),
                                                                    ('FR', 'Frankrijk'), ('GF', 'Frans-Guyana'),
                                                                    ('PF', 'Frans-Polynesië'), (
                                                                    'TF', 'Franse Zuidelijke en Antarctische Gebieden'),
                                                                    ('GA', 'Gabon'), ('GM', 'Gambia'),
                                                                    ('GE', 'Georgië'), ('DE', 'Duitsland'),
                                                                    ('GH', 'Ghana'), ('GI', 'Gibraltar'),
                                                                    ('GR', 'Griekenland'), ('GL', 'Groenland'),
                                                                    ('GD', 'Grenada'), ('GP', 'Guadeloupe'),
                                                                    ('GU', 'Guam'), ('GT', 'Guatemala'),
                                                                    ('GG', 'Guernsey'), ('GN', 'Guinee'),
                                                                    ('GW', 'Guinee-Bissau'), ('GY', 'Guyana'),
                                                                    ('HT', 'Haïti'),
                                                                    ('HM', 'Heardeiland en McDonaldeilanden'),
                                                                    ('VA', 'Vaticaanstad'), ('HN', 'Honduras'),
                                                                    ('HK', 'Hong Kong'), ('HU', 'Hongarije'),
                                                                    ('IS', 'IJsland'), ('IN', 'IndiaIndia'),
                                                                    ('ID', 'Indonesië'), ('IR', 'Iran'), ('IQ', 'Irak'),
                                                                    ('IE', 'Ierland'), ('IM', 'Man'), ('IL', 'Israël'),
                                                                    ('IT', 'Italië'), ('JM', 'Jamaica'),
                                                                    ('JP', 'Japan'), ('JE', 'Jersey'),
                                                                    ('JO', 'Jordanië'), ('KZ', 'Kazachstan'),
                                                                    ('KE', 'Kenia'), ('KI', 'KiribatiKiribati'),
                                                                    ('KP', 'Noord-Korea'), ('KR', 'Zuid-Korea'),
                                                                    ('KW', 'Koeweit'), ('KG', 'Kirgizië'),
                                                                    ('LA', 'Laos'), ('LV', 'Letland'),
                                                                    ('LB', 'Libanon'), ('LS', 'Lesotho'),
                                                                    ('LR', 'Liberia'), ('LY', 'Libië'),
                                                                    ('LI', 'Liechtenstein'), ('LT', 'Litouwen'),
                                                                    ('LU', 'Luxemburg'), ('MO', 'Macau'),
                                                                    ('MK', 'Macedonië'), ('MG', 'Madagaskar'),
                                                                    ('MW', 'Malawi'), ('MY', 'Maleisië'),
                                                                    ('MV', 'Maldiven'), ('ML', 'Mali'), ('MT', 'Malta'),
                                                                    ('MH', 'Marshalleilanden'), ('MQ', 'Martinique'),
                                                                    ('MR', 'Mauritanië'), ('MU', 'Mauritius'),
                                                                    ('YT', 'Mayotte'), ('MX', 'Mexico'),
                                                                    ('FM', 'Micronesië'), ('MD', 'Moldavië'),
                                                                    ('MC', 'Monaco'), ('MN', 'Mongolië'),
                                                                    ('ME', 'Montenegro'), ('MS', 'Montserrat'),
                                                                    ('MA', 'Marokko'), ('MZ', 'Mozambique'),
                                                                    ('MM', 'Myanmar'), ('NA', 'Namibië'),
                                                                    ('NR', 'Nauru'), ('NP', 'Nepal'),
                                                                    ('NL', 'Nederland'), ('NC', 'Nieuw-Caledonië'),
                                                                    ('NZ', 'Nieuw Zeeland'), ('NI', 'Nicaragua'),
                                                                    ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'),
                                                                    ('NF', 'Norfolk'), ('MP', 'Noordelijke Marianen'),
                                                                    ('NO', 'Noorwegen'), ('OM', 'Oman'),
                                                                    ('PK', 'Pakistan'), ('PW', 'Palau'),
                                                                    ('PS', 'Palestijnse Gebieden'), ('PA', 'Panama'),
                                                                    ('PG', 'Papoea-Nieuw-Guinea'), ('PY', 'Paraguay'),
                                                                    ('PE', 'Peru'), ('PH', 'Filipijnen'),
                                                                    ('PN', 'Pitcairneilanden'), ('PL', 'Polen'),
                                                                    ('PT', 'Portugal'), ('PR', 'Puerto Rico'),
                                                                    ('QA', 'Qatar'), ('RE', 'Réunion'),
                                                                    ('RO', 'Roemenië'), ('RU', 'Rusland'),
                                                                    ('RW', 'Rwanda'), ('BL', 'Saint-Barthélemy'), (
                                                                    'SH', 'Sint-Helena, Ascension en Tristan da Cunha'),
                                                                    ('KN', 'Saint Kitts en Nevis'),
                                                                    ('LC', 'Saint Lucia'), ('MF', 'Saint-Martin'),
                                                                    ('PM', 'Saint-Pierre en Miquelon'),
                                                                    ('VC', 'Saint Vincent en de Grenadines'),
                                                                    ('WS', 'Samoa'), ('SM', 'San Marino'),
                                                                    ('ST', 'Sao Tomé en Principe'),
                                                                    ('SA', 'Saoedi-Arabië'), ('SN', 'Senegal'),
                                                                    ('RS', 'Servië'), ('SC', 'Seychellen'),
                                                                    ('SL', 'Sierra Leone'), ('SG', 'Singapore'),
                                                                    ('SX', 'Sint Maarten'), ('SK', 'Slowakije'),
                                                                    ('SI', 'Slovenië'), ('SB', 'Salomonseilanden'),
                                                                    ('SO', 'Somalië'), ('ZA', 'Zuid Afrika'), ('GS',
                                                                                                               'Zuid-Georgië en de Zuidelijke Sandwicheilanden'),
                                                                    ('ES', 'Spanje'), ('LK', 'Sri Lanka'),
                                                                    ('SD', 'Soedan'), ('SR', 'Suriname'),
                                                                    ('SJ', 'Spitsbergen en Jan Mayen'),
                                                                    ('SZ', 'Swaziland'), ('SE', 'Zweden'),
                                                                    ('CH', 'Zwitserland'), ('SY', 'Syrië'),
                                                                    ('TW', 'Taiwan'), ('TJ', 'Tadzjikistan'),
                                                                    ('TZ', 'Tanzania'), ('TH', 'Thailand'),
                                                                    ('TL', 'Oost-Timor'), ('TG', 'Togo'),
                                                                    ('TK', 'Tokelau-eilanden'), ('TO', 'Tonga'),
                                                                    ('TT', 'Trinidad en Tobago'), ('TN', 'Tunesië'),
                                                                    ('TR', 'Turkije'), ('TM', 'Turkmenistan'),
                                                                    ('TC', 'Turks- en Caicoseilanden'),
                                                                    ('TV', 'Tuvalu'), ('UG', 'Oeganda'),
                                                                    ('UA', 'Oekraïne'),
                                                                    ('AE', 'Verenigde Arabische Emiraten'),
                                                                    ('GB', 'Verenigd Koninkrijk'),
                                                                    ('US', 'Verenigde Staten'), ('UM',
                                                                                                 'Kleine afgelegen eilanden van de Verenigde Staten'),
                                                                    ('UY', 'Uruguay'), ('UZ', 'Oezbekistan'),
                                                                    ('VU', 'Vanuatu'), ('VE', 'Venezuela'),
                                                                    ('VN', 'Vietnam'), ('VG', 'Maagdeneilanden, Brits'),
                                                                    ('VI', 'Maagdeneilanden, Amerikaans'),
                                                                    ('WF', 'Wallis en Futuna'),
                                                                    ('EH', 'Westelijke Sahara'), ('YE', 'Jemen'),
                                                                    ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')])),
                ('email', models.EmailField(max_length=254, verbose_name='e-mail', blank=True)),
                ('phone_fixed', models.CharField(max_length=16, verbose_name='phone fixed', blank=True)),
                ('machazine', models.BooleanField(default=True, verbose_name='MaCHazine')),
                ('board_invites', models.BooleanField(default=False, verbose_name='board invites')),
                ('constitution_card', models.BooleanField(default=False, verbose_name='constitution card')),
                ('christmas_card', models.BooleanField(default=True, verbose_name='Christmas card')),
                ('yearbook', models.BooleanField(default=False, verbose_name='yearbook')),
                ('comment', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'entity',
                'verbose_name_plural': 'entities',
            },
        ),
        migrations.CreateModel(
            name='Modification',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='date')),
                ('ip', models.CharField(max_length=40, verbose_name='ip address')),
                ('modification', models.TextField(verbose_name='modification', blank=True)),
            ],
            options={
                'verbose_name': 'modification',
                'verbose_name_plural': 'modifications',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('entity_ptr',
                 models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False,
                                      to='ldb.Entity')),
                ('name_prefix', models.CharField(max_length=100, verbose_name='name prefix')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('name_short', models.CharField(max_length=100, verbose_name='name short', blank=True)),
                ('salutation', models.CharField(max_length=100, verbose_name='salutation')),
            ],
            options={
                'verbose_name': 'organization',
                'verbose_name_plural': 'organizations',
            },
            bases=('ldb.entity',),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('entity_ptr',
                 models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False,
                                      to='ldb.Entity')),
                ('titles', models.CharField(max_length=20, verbose_name='titles', blank=True)),
                ('initials', models.CharField(max_length=15, verbose_name='initials')),
                ('firstname', models.CharField(max_length=50, verbose_name='first name')),
                ('preposition', models.CharField(max_length=15, verbose_name='preposition', blank=True)),
                ('surname', models.CharField(max_length=100, verbose_name='surname')),
                ('postfix_titles', models.CharField(max_length=20, verbose_name='postfix titles', blank=True)),
                ('phone_mobile', models.CharField(max_length=16, verbose_name='phone mobile', blank=True)),
                ('gender', models.CharField(blank=True, max_length=1, verbose_name='gender',
                                            choices=[(b'M', 'Male'), (b'F', 'Female')])),
                ('birthdate', models.DateField(null=True, verbose_name='birthdate', blank=True)),
                ('deceased', models.BooleanField(default=False, verbose_name='deceased')),
                ('mail_announcements', models.BooleanField(default=True, verbose_name='announcements mailing')),
                ('mail_company', models.BooleanField(default=True, verbose_name='company mailing')),
                ('ldap_username', models.CharField(max_length=50, verbose_name='LDAP username', blank=True)),
                ('netid', models.CharField(max_length=32, verbose_name='NetID', blank=True)),
                ('linkedin_id', models.CharField(max_length=32, verbose_name='LinkedIn ID', blank=True)),
                ('facebook_id', models.CharField(max_length=32, verbose_name='Facebook ID', blank=True)),
            ],
            options={
                'verbose_name': 'person',
                'verbose_name_plural': 'people',
            },
            bases=('ldb.entity',),
        ),
        migrations.CreateModel(
            name='Alumnus',
            fields=[
                ('person', models.OneToOneField(primary_key=True, serialize=False, to='ldb.Person')),
                ('study', models.CharField(max_length=100, verbose_name='study', blank=True)),
                ('study_first_year', models.IntegerField(null=True, verbose_name='study first year', blank=True)),
                ('study_last_year', models.IntegerField(null=True, verbose_name='study last year', blank=True)),
                ('study_research_group', models.CharField(max_length=100, verbose_name='research group', blank=True)),
                ('study_paper', models.CharField(max_length=300, verbose_name='paper', blank=True)),
                ('study_professor', models.CharField(max_length=100, verbose_name='professor', blank=True)),
                ('work_company', models.CharField(max_length=100, verbose_name='company', blank=True)),
                ('work_position', models.CharField(max_length=100, verbose_name='position', blank=True)),
                ('work_sector', models.CharField(max_length=100, verbose_name='sector', blank=True)),
                ('contact_method', models.CharField(default=b'e', max_length=1, verbose_name='contact method',
                                                    choices=[(b'm', b'Mail'), (b'e', b'Email')])),
            ],
            options={
                'verbose_name': 'alumnus',
                'verbose_name_plural': 'alumni',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('person', models.OneToOneField(primary_key=True, serialize=False, to='ldb.Person')),
                ('faculty', models.CharField(max_length=50, verbose_name='faculty')),
                ('department', models.CharField(max_length=50, verbose_name='department')),
                ('function', models.CharField(max_length=50, verbose_name='function')),
                ('phone_internal', models.CharField(max_length=5, verbose_name='phone internal')),
            ],
            options={
                'verbose_name': 'employee',
                'verbose_name_plural': 'employees',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('person', models.OneToOneField(primary_key=True, serialize=False, to='ldb.Person')),
                ('date_from', models.DateField(null=True, verbose_name='date from', blank=True)),
                ('date_to', models.DateField(null=True, verbose_name='date to', blank=True)),
                ('date_paid', models.DateField(null=True, verbose_name='date paid', blank=True)),
                ('amount_paid', models.IntegerField(null=True, verbose_name='amount paid', blank=True)),
                ('associate_member', models.BooleanField(default=False, verbose_name='associate member')),
                ('donating_member', models.BooleanField(default=False, verbose_name='donating member')),
                ('merit_date_from', models.DateField(null=True, verbose_name='merit member date from', blank=True)),
                ('merit_invitations', models.BooleanField(default=True, verbose_name='merit member invitations')),
                ('merit_history', models.TextField(verbose_name='merit member history', blank=True)),
                ('honorary_date_from',
                 models.DateField(null=True, verbose_name='honorary member from date', blank=True)),
            ],
            options={
                'verbose_name': 'member',
                'verbose_name_plural': 'members',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('person', models.OneToOneField(primary_key=True, serialize=False, to='ldb.Person')),
                ('study', models.CharField(max_length=50, verbose_name='study')),
                ('first_year', models.IntegerField(null=True, verbose_name='first year', blank=True)),
                ('student_number', models.CharField(max_length=7, verbose_name='student number', blank=True)),
                ('graduated', models.BooleanField(default=False, verbose_name='graduated')),
                ('phone_parents', models.CharField(max_length=16, verbose_name='phone parents', blank=True)),
                ('yearbook_permission', models.BooleanField(default=True, verbose_name='yearbook permission')),
                ('date_verified', models.DateField(null=True, verbose_name='date verified', blank=True)),
            ],
            options={
                'verbose_name': 'student',
                'verbose_name_plural': 'students',
            },
        ),
        migrations.AddField(
            model_name='person',
            name='living_with',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, blank=True,
                                       to='ldb.Person'),
        ),
        migrations.AddField(
            model_name='modification',
            name='person',
            field=models.ForeignKey(to='ldb.Person', on_delete=models.CASCADE),
        ),
        migrations.AddField(
            model_name='committeemembership',
            name='person',
            field=models.ForeignKey(to='ldb.Person', on_delete=models.CASCADE),
        ),
        migrations.AddField(
            model_name='committee',
            name='members',
            field=models.ManyToManyField(to='ldb.Person', through='ldb.CommitteeMembership'),
        ),
    ]
